name: Laravel CI

on:
  push:
    branches:
      - master # Change to your default branch
  pull_request:
    branches:
      - master # Change to your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Adjust PHP version if necessary
          extensions: mbstring, xml, bcmath, curl, zip
          ini-values: post_max_size=256M, upload_max_filesize=256M

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test

      - name: Deploy to Production
        if: github.ref == 'refs/heads/master'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          PRODUCTION_HOST: ${{ secrets.PRODUCTION_HOST }}
          PRODUCTION_USER: ${{ secrets.PRODUCTION_USER }}
          APP_PATH: ${{ secrets.APP_PATH }}
        run: |
          set -x # Enable debugging
          
          # Create the .ssh directory if it doesn't exist
          mkdir -p ~/.ssh
          
          # Write the SSH private key to the file
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add the host to known_hosts
          ssh-keyscan -H "${PRODUCTION_HOST}" >> ~/.ssh/known_hosts
          
          # Test SSH connection
          ssh -T ${PRODUCTION_USER}@${PRODUCTION_HOST} || { echo "SSH connection failed"; exit 1; }

          echo "Deploying to production server..."
          ssh ${PRODUCTION_USER}@${PRODUCTION_HOST} << 'EOF'
            set -x # Enable debugging for remote commands
            cd ${APP_PATH} || { echo "Failed to change directory to ${APP_PATH}"; exit 1; }
            git pull origin master || { echo "Failed to pull from repository"; exit 1; }
            composer install --prefer-dist --no-progress --no-suggest || { echo "Composer install failed"; exit 1; }
            php artisan migrate --force || { echo "Migration failed"; exit 1; }
            php artisan config:cache || { echo "Config caching failed"; exit 1; }
            php artisan route:cache || { echo "Route caching failed"; exit 1; }
            php artisan view:cache || { echo "View caching failed"; exit 1; }
            php artisan event:cache || { echo "Event caching failed"; exit 1; }
          EOF
